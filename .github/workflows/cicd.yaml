name: Continuous Integration and Deployment

on:
  push:
    branches: [ master ]

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Rust
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4
        with:
          key: unit-test

      - name: Unit test
        run: cargo test

  build_timings:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Rust
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4
        with:
          key: unit-timings

      - name: Download Cargo dependencies
        run: cargo fetch

      - name: Time cold build
        run: cargo build --release --timings

      - name: Upload timings report
        uses: actions/upload-artifact@v3
        with:
          name: build_timings_report
          path: target/cargo-timings/cargo-timing.html

  verify_msrv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Rust
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4
        with:
          key: verify-msrv

      - name: Install cargo-msrv
        run: |
          wget https://github.com/foresterre/cargo-msrv/releases/download/v0.15.1/cargo-msrv_v0.15.1_Linux_x86_64.tar
          tar -xvf cargo-msrv_v0.15.1_Linux_x86_64.tar

      - name: Verify whether MSRV is satisfiable
        run: ./cargo-msrv verify

  verify_no_unused_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Switch to nightly Rust
        run: rustup default nightly

      - name: Cache Rust
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4
        with:
          key: verify-no-unused-dependencies

      - name: Install cargo-udeps
        run: |
          wget https://github.com/est31/cargo-udeps/releases/download/v0.1.27/cargo-udeps-v0.1.27-x86_64-unknown-linux-gnu.tar.gz
          tar -xvf cargo-udeps-v0.1.27-x86_64-unknown-linux-gnu.tar.gz

      - name: Verify there's no unused dependencies
        run: ./cargo-udeps-v0.1.27-x86_64-unknown-linux-gnu/cargo-udeps udeps

  deploy_to_crates_io:
    needs:
      - unit_test
      - verify_msrv
      - verify_no_unused_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        if: ${{ steps.whether-deployed.outputs.VERSION_EXISTS != true }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4
        with:
          key: deploy-to-crates-io

      - name: Determine whether current version is already deployed
        run: |
          cargo install cargo-get
          CRATE_VERSION=$(cargo get version | tr -d '\n')
          VERSION_EXISTS=$(curl -s https://crates.io/api/v1/crates/uringy | jq '.versions | map(.num) | contains(["'$CRATE_VERSION'"])')
          echo "::set-output name=VERSION_EXISTS::$VERSION_EXISTS"
        id: whether-deployed

      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_ACCESS_TOKEN }}
        if: ${{ steps.whether-deployed.outputs.VERSION_EXISTS == "false" }}

      - name: Publish to crates.io
        run: cargo publish
        if: ${{ steps.whether-deployed.outputs.VERSION_EXISTS == "false" }}
